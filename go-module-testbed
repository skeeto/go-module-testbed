#!/bin/sh

set -e

usage() {
    printf './go-module-testbed [dir [options...]]\n'
    printf '  -p port    HTTP server port [8001]\n'
}

hostsrc="$(cd "$(dirname "$0")"; pwd -P)/host.go"

basedir="$PWD"
if [ $# -gt 0 ]; then
    case "$1" in
	/*) basedir="$1" ;;
	*)  basedir="$PWD/$1" ;;
    esac
    shift
fi

port="8001"
while getopts p: option
do
    case $option in
    p) port="$OPTARG";;
    ?) usage; exit 2;;
    esac
done

mkdir -p "$basedir"
cd "$basedir"

# Clear out any existing GOPATH remnants
if [ -e go ]; then
    chmod -R +w go
    rm -rf go
fi

# Create an example module with import path localhost.localdomain/example
if [ ! -e src/example ]; then
    mkdir -p src/example/cmd/demo www/example
    (
        cd src/example
        git init
        go mod init localhost.localdomain/example
        cat >example.go <<EOF
package example

func Version() string {
	return "Example v1.0.0"
}
EOF
        cat >cmd/demo/main.go <<EOF
package main

import (
	"fmt"

	"localhost.localdomain/example"
)

func main() {
	fmt.Println(example.Version())
}
EOF
        git add .
        git commit -a -m example
        git tag -a v1.0.0 -m v1.0.0
    )
    cat >www/example/index.html <<EOF
<!DOCTYPE html>
<meta name="go-import" content="localhost.localdomain/example git git://localhost.localdomain/example">
EOF
fi

# NOTE: $basedir is not properly escaped/quoted when written out to this
# shell script, so don't choose anything too crazy.
cat >activate <<EOF
# source this file to enter the testbed environment
basedir='$basedir'
export GOPATH="\$basedir/go"
export GOCACHE="\$GOPATH/cache"
export GOENV="\$GOPATH/env"
export GO111MODULE="on"
export GOINSECURE="localhost.localdomain"
export GOPRIVATE="localhost.localdomain"
export GOPROXY="https://proxy.golang.org"
export HTTP_PROXY="localhost.localdomain:$port"
export NO_PROXY="proxy.golang.org,sum.golang.org"
if [ -z "\$testbed_active" ]; then
    testbed_active=true
    PATH="\$GOPATH/bin:\$PATH"
    PS1="(\$(basename "\$basedir")) \$PS1"
fi
EOF

exec go run "$hostsrc" "$@"
